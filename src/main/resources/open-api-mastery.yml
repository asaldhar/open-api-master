openapi: 3.0.3

info:
  title: EazyShop Products APIs Definition
  description: |
    # About Us
    ***EazyShop*** is an open market product selling company. Any website can list our products by using our _APIs_. Shipping & other logistics will be taken care by us. You will get an `Affiliate commission` for selling our products.
    # Categories Supported
      - Mobiles
        - Apple
        - Samsung
        - OnePlus
      - Laptops
      - Televisions
      - Headphones
  termsOfService: https://eazyshop.com/terms/
  contact:
    name: API Support
    url: https://eazyshop.com/support
    email: support@eazyshop.com
  license:
    name: EazyShop License
    url: https://eazyshop.com/licenses/LICENSE-2.0.html
  version: 0.0.1
  x-custom-info:
    comment: some comments
    developers:
      - name: John Doe
        email: john@doe.com
      - name: Jane Doe
        email: jane@doe.com

externalDocs:
  description: Extenal Documentation
  url: https://example.com

servers:
  - url: https://development.eazyshop-server.com/v1
    description: Development Server
  - url: https://staging.eazyshop-server.com/v1
    description: Staging Server
  - url: https://api.eazyshop-server.com/v1
    description: Production Server
  - url: https://{username}.eazyshop-server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by the service provider
      port:
        enum:
          - "8443"
          - "443"
        default: "8443"
      version:
        default: v1
    description: Development Server

tags:
  - name: Categories
    description: Catagories-related operations
  - name: Products
    description: Products-related operations
  - name: Orders
    description: Orders-related operations

security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - oAuth2AuthCode:
      - read
      - write
      - admin
  - OpenId:
      - read
      - write
      - admin

paths:
  /categories:
    get:
      tags:
        - Categories
      summary: List all categories
      description: Returns the list of categories supported by EazyShop
      operationId: getCategories
      security:
        - BasicAuth: []
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            format: int32
            minimum: 100
            maximum: 1000
          examples:
            mobiles:
              summary: Use this example for mobiles
              value: 101
            laptops:
              summary: Use this example for laptops
              value: 102
            headphones:
              summary: Use this example for headphones
              value: 103
            televisions:
              summary: Use this example for televisions
              value: 104
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: Mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: Headphones
                    - categoryId: 104
                      name: Televisions
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 101
                      name: Mobiles
        '500':
          $ref: "#/components/responses/InternalServerError"
  /categories/{categoryId}:
    get:
      tags:
        - Categories
      summary: Return category details
      description: |
        Returns the list of categories supported by EazyShop for provided categoryId
      operationId: getCategoriesById
      security: []
      parameters:
        - name: categoryId
          in: path
          schema:
            type: integer
            format: int32
            minimum: 100
            maximum: 1000
          example: 102
          required: true
      responses:
        '200':
          description: Return category details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products:
    get:
      tags:
        - Products
      summary: List of products
      description: |
        List of products listed on EazyShop
      operationId: getProducts
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            format: int32
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple IPhone 13 Pro
                      price: 999.00
                      categoryName: Mobiles
                      releaseDate: 2024-12-25
                      quantity: 96
                    - productId: 102
                      name: Samsung S22 Ultra
                      price: 899.00
                      categoryName: Mobiles
                      releaseDate: 2024-12-25
                      quantity: 121
                    - productId: 103
                      name: OnePlus 10 Pro 5G
                      price: 750.00
                      categoryName: Mobiles
                      releaseDate: 2024-12-25
                      quantity: 67
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products/{productId}:
    get:
      tags:
        - Products
      summary: Return product details
      description: |
        Returns the product details from EazyShop
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
          example: 1
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders:
    post:
      tags:
        - Orders
      summary: Create Order
      description: |
        Post order details to EazyShop for processing
        and shipping
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    format: int32
          links:
            GetOrderByOrderId:
              $ref: '#/components/links/GetOrderByOrderId'
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Orders
      summary: Update Order
      description: |
        Update order details to EazyShop for processing
        and shipping
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                  format: int32
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: Order details updated successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - Orders
      summary: Delete Order
      description: Delete order details from EazyShop
      operationId: deleteOrder
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '204':
          description: Order details deleted successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get order details from EazyShop
      operationId: getOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Order details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    format: int32
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get order details from EazyShop
      operationId: getOrderDetailsByPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
      responses:
        '200':
          description: Order details fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    format: int32
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /oneOfOrder:
    post:
      tags:
        - Orders
      summary: Insert OneOf the Order Details
      description: Insert OneOf the Order Details into EazyShop
      operationId: demoOfOneOf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/Mobile'
                    - $ref: '#/components/schemas/Laptop'
                address:
                  $ref: '#/components/schemas/Address'
              required:
                - products
                - address
      responses:
        '200':
          description: Order placed successfully
  /anyOfOrder:
    get:
      tags:
        - Orders
      summary: Get Order Details
      description: Get Order Details from EazyShop
      operationId: demoOfAnyOf
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
        - name: fetchType
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
          description: >
            Fetch Type:
              * `summary` - Will provide Order Summary
              * `details` - Will provide Order Summary & Order Address
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/OrderSummary'
                  - $ref: '#/components/schemas/OrderAddress'

components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      schema:
        type: integer
        format: int32
      required: true
    orderIdPathParam:
      name: orderId
      in: path
      schema:
        type: integer
        format: int32
      required: true
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, zipcode]
    Product:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        name:
          type: string
        price:
          format: float
          type: number
        categoryName:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          format: int32
          description: |
            ***Quantity*** represents `stock` value when this field is being sent by EazyShop. Where as in the scenarios of consumer sending this field, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping end use <u>*when the stock value is 0*</u>
    Category:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        name:
          type: string
    Mobile:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            networkType:
              type: string
              enum:
                - 4G
                - 5G
          required: [networkType]
    Laptop:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - 8 GB
                - 16 GB
                - 32 GB
          required: [ram]
    OrderSummary:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    OrderAddress:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/Address"
  responses:
    InternalServerError:
      description: |
        An error occured while processing the request.
        Please contact support@eazyshop.com
  links:
    GetOrderByOrderId:
      description: >
        The `orderId` value returned in the response can be used
        as input parameter in `GET /orders`
      operationId: getOrderDetails
      parameters:
        orderId: '$response.body#/orderId'
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/api/oauth.access
          scopes:
            read: Read only access
            write: Read Write access
            admin: Admin access
    OpenId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/well-known/openid-configuration